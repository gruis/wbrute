#!/usr/bin/env ruby

require "wbrute"

Wbrute.puts "# #{Time.now} wbrute #{Wbrute.options}"
Thread.abort_on_exception = true
threads = []

batch_size = Wbrute.options.batch || Wbrute.options.targets.length
batches = Wbrute.options.targets.each_slice(batch_size).map do |targets|
  targets.map do |target|
      Wbrute::Engine.new(target, Wbrute.options, Wbrute::Paths.new(Wbrute.options.size))
  end
end


Thread.new do |t|
  sleep 1 while batches.empty?
  engines = batches.flatten
  while engines.map(&:remaining).inject(&:+) > 0
    done    = engines.map(&:done).inject(&:+)
    length  = engines.map(&:length).inject(&:+)
    percent = ((done.to_f / length) * 100).round(2)
    Wbrute.info_print("\rtotal: #{done}/#{length} (#{percent}%)\r")
    sleep 5
  end
end


batches.each do |engines|
  Wbrute.info "Starting batch of #{engines.length}"
  engines.each do |engine|
    threads << Thread.new { engine.go }
  end
  threads.each(&:join)
  threads = []
end
